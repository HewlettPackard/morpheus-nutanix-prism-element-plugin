buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
		maven { url "https://nexus.bertramlabs.com/content/repositories/snapshots" }
		maven { url "https://nexus.bertramlabs.com/content/repositories/releases" }
		maven { url "https://nexus.bertramlabs.com/content/repositories/publicReleases" }
	}
	dependencies {
		classpath "com.github.johnrengelman:shadow:8.1.1"
		//        classpath "com.morpheusdata:morpheus-plugin-gradle:$morpheusApiVersion"
		classpath "com.morpheusdata:morpheus-plugin-gradle:$morpheusGradleVersion"
		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"
	}
}


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'asset-pipeline'
apply plugin: 'com.morpheusdata.morpheus-plugin-gradle'


group = 'com.morpheusdata.xen'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

java {
	sourceCompatibility = JavaVersion.toVersion('1.11')
	targetCompatibility = JavaVersion.toVersion('1.11')
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://nexus.bertramlabs.com/content/repositories/snapshots" }
	maven { url "https://nexus.bertramlabs.com/content/repositories/releases" }
	maven { url "https://nexus.bertramlabs.com/content/repositories/publicReleases" }
}

configurations {
	provided
}

dependencies {
	provided "com.morpheusdata:morpheus-plugin-api:$morpheusApiVersion"

	provided "org.codehaus.groovy:groovy-all:$groovyVersion"
	implementation 'commons-beanutils:commons-beanutils:1.9.3'
	implementation "org.slf4j:slf4j-api:$slf4jVersion"
	implementation "org.slf4j:slf4j-parent:$slf4jVersion"
	implementation 'commons-net:commons-net:3.6'

	// Include morpheus-core and it's dependencies
	testImplementation "com.morpheusdata:morpheus-plugin-api:$morpheusApiVersion"
	testImplementation 'io.reactivex.rxjava3:rxjava:3.1.7'
	testImplementation 'org.apache.httpcomponents:httpclient:4.5.3'
	testImplementation 'org.apache.httpcomponents:httpcore:4.4.5'
	testImplementation "org.slf4j:slf4j-parent:$slf4jVersion"

	testImplementation "org.codehaus.groovy:groovy-all:$groovyVersion"
	testImplementation 'net.bytebuddy:byte-buddy:1.9.3'
	testImplementation 'org.objenesis:objenesis:2.6'
	testImplementation platform("org.spockframework:spock-bom:$spockVersion")
	testImplementation "org.spockframework:spock-core"
	testImplementation 'cglib:cglib-nodep:3.2.12'
	testImplementation 'org.assertj:assertj-core:3.26.3'

	//http client
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	implementation 'org.apache.httpcomponents:httpmime:4.5.13'
	implementation 'org.apache.httpcomponents:httpasyncclient:4.1.4'
	implementation 'org.apache.httpcomponents:httpcore-nio:4.4.12'
	implementation('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
		exclude module: 'xercesImpl'
	}

	implementation("com.bertramlabs.plugins:karman-core:${karmanVersion}") {
		exclude module: 'groovy-all'
	}

	implementation 'org.apache.commons:commons-compress:1.21'
}


sourceSets {
	main {
		compileClasspath += configurations.provided
	}
}

//Set plugin metadata information here that gets written into the jar
jar {
	manifest {
		attributes(
			'Plugin-Class': 'com.morpheusdata.nutanix.prismelement.plugin.NutanixPrismElementPlugin',
			'Plugin-Version': version,
			'Morpheus-Name': 'Nutanix Prism Element',
			'Morpheus-Organization': 'morpheus',
			'Morpheus-Code': 'nutanix-prism-element',
			'Morpheus-Description': 'Plugin for Nutanix Prism Element',
			'Morpheus-Logo': 'assets/nutanix.svg',
			'Morpheus-Logo-Dark': 'assets/nutanix-dark.svg',
			'Morpheus-Labels': 'Plugin, Cloud',
			'Morpheus-Repo': 'https://github.com/gomorpheus/morpheus-nutanix-prism-element-plugin',
			'Morpheus-Min-Appliance-Version': "8.0.3",
		)
	}
}

assets {
	packagePlugin = false //leave this false for plugins
}

task copyRuntimeLibs(type: Copy) {
	into "lib"
	from project.configurations.runtimeClasspath - project.configurations.provided
}

task(console, dependsOn: 'classes', type: JavaExec) {
	main = 'groovy.ui.Console'
	classpath = sourceSets.main.compileClasspath + sourceSets.main.runtimeClasspath
}

tasks.register('moveToPlugin') {
	doLast {
		ant.move file: "${buildDir}/libs/${project.name}-${version}-all.jar",
			todir: "../morpheus-plugin-core/plugins"
	}
}

// Runs assemble and copyToMorpheus
tasks.register('publishToMorpheus') {
	dependsOn tasks.shadowJar
	dependsOn 'moveToPlugin'
	tasks.findByName('moveToPlugin').mustRunAfter 'shadowJar'
}

test {
	useJUnitPlatform()  // Required for Spock 2.x
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}
tasks.assemble.dependsOn tasks.shadowJar

